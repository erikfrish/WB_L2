package main

/*
State

Паттерн "Состояние" позволяет объекту изменять свое поведение при изменении его внутреннего состояния.
В данном примере мы реализуем простой автомат для выдачи напитков,
который может находиться в различных состояниях: "Нет монет", "Монета вставлена", "Напиток выбран".

В этом примере создан автомат для выдачи напитков с различными состояниями:
"Нет монет", "Монета вставлена", "Напиток выбран", "Выдача напитка".
VendingMachine содержит методы для взаимодействия с автоматом,
а также метод для установки нового состояния. Каждое состояние реализует интерфейс State,
который определяет методы для выполнения действий в соответствии с текущим состоянием.
*/

import (
	p "08_state/pattern"
)

func main() {
	// Создаем автомат для выдачи напитков
	vendingMachine := p.NewVendingMachine()

	// Взаимодействие с автоматом
	vendingMachine.InsertCoin()
	vendingMachine.SelectDrink()
	vendingMachine.Dispense()

	vendingMachine.EjectCoin()
	vendingMachine.SelectDrink()
}
